spring:
  kafka:
    bootstrap-servers: 192.168.0.144:9092 # замени на IP контейнера с Kafka в Ubuntu
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 0
      properties:
        max.block.ms: 3000               # <== максимальное время блокировки при send
        metadata.max.age.ms: 1000        # <== как часто обновлять метаданные топика
        request.timeout.ms: 3000         # <== таймаут сетевого запроса
        delivery.timeout.ms: 3000        # <== полный лимит времени доставки
    properties:
      spring.json.add.type.headers: false
    topics:
      transfer-requests: transfer-requests

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    display-request-duration: true
    doc-expansion: none

server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:gpts.p12
    key-store-password: changeit
    key-store-type: PKCS12

logging:
  file:
    name: C:/gpts/gpts-logs/app.log
  level:
    root: INFO
    com.gpts: DEBUG # только твои пакеты — можно видеть подробные логи
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    tags:
      application: gpts-api-transfer-open

security:
  api-key: eyJhbGciOiJIUzI1NiJ9.eyJhcGlJZCI6ImdwdHMiLCJleHAiOjE3MDAwMDAwMDB9.W_kmzcvOSb2xXNgX65-VEukf-mR_EEO7m34eCIxxuVE
